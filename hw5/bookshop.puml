@startuml
skinparam classAttributeIconSize 0

class Book {
	-isbn: ISBN
	-author: Name
	-title: String
	-year: Year
}

class CatalogBook {
	-price: Price
	-reviews: Review [*]
}
Book <|-- CatalogBook

class Profile {
    -name: Name
	-email: Email
	-address: Address
	-password: Password
}

class Wishlist {
	-books: Book[*]
	+addBook()
	+removeBook()
	+addToCart()
}
Wishlist -- Cart
Wishlist "1" o-- "*" Book

class Customer {
	-cart: Cart
	+buy
	+addToCart
}
Customer *-- Cart

class LoginCustomer {
    -profile: Profile
	-wishlist: Wishlist
	-orders: Order[*]

	+addBookToWishList()
}
LoginCustomer -|> Customer
LoginCustomer "1" o-- "*" Order
LoginCustomer *-- Wishlist
LoginCustomer *-- Profile

class Administrator {
	+ addReview()
	+ approveReview()
}
Administrator -|> LoginCustomer
Review -- Administrator

class OtherMarket {
    +addSubCatalog()
    +removeSubCatalog()
}
OtherMarket -|> LoginCustomer
OtherMarket -- Catalog

class Editor {
	+sendReview()
}
Editor -|> LoginCustomer
Editor -- CatalogBook
Editor -- Review

class Review {
    -approved: Bool
    -text: Text
    -rating: Rating {1..5}
	+getFull()
	+getSnap()
}
CatalogBook "1" o-- "*" Review

class Order {
	-book: CatalogBook[*]
	-totalPrice: Price
	-date: Date
	-status: Status
	+pay()
	+addBookToOrder()
	+removeBookFromOrder()
}
Order "1" o-- "*" CatalogBook

class Cart {
	-cart: CatalogBook[*]
	-totalPrice: Price
	+addToCart()
	+removeFromCart()
	+pay()
}
Cart "1" o-- "*" CatalogBook
Cart -- Payment

class Payment {
	-method: PaymentMethod
	+pay()
	+rollback()
}

interface PaymentMethod {
	+pay()
}
class CreditPaymentMethod {
    -card
    +setCardInfo()
    +pay()
}
class TransferPaymentMethod {
    -info
    -setTransferInfo()
    +pay()
}

TransferPaymentMethod -|> PaymentMethod
CreditPaymentMethod -|> PaymentMethod
Payment *-- PaymentMethod

class Database
note top of Database : Связь с базой данных. \n Тип каталога определяется SQL запросом.

class Catalog {
    #list: CatalogBook[*]
    #subCatalogs: CatalogBook[*]
	+searchBookByTitle()
	+searchBookByAuthor()
	+searchBookByKeyword()
	+loadCatalogFromDatabase()
	+addSubCatalog()
	+view()
}
Catalog "1" o-- "*" CatalogBook
Catalog -- Database

class MiniCatalog {
	+loadMiniCatalogFromDatabase()
}
MiniCatalog -- Database

class XmlCatalog {
	+view()
}
MiniCatalog <|- XmlCatalog

class WebCatalog {
	+view()
}
MiniCatalog <|- WebCatalog

class Store {
	-catalog: Catalog
	-currentLogins: LoginCustomer[*]
	-currentGuests: Customer[*]
	+login()
}
Store *-- Catalog
Store "1" *-- "*" LoginCustomer
Store "1" *-- "*" Customer
Store -- Database

@enduml
